#print(fit.km)
ct.km <- table( data$ethproportions , fit.km$cluster)
randIndex(ct.km)
ct.km
install.packages("mclust")
library(NbClust)
library(flexclust)
library(cluster)
library(mclust)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
set.seed(123)
k.max <- 15
wss <- sapply(1:k.max,
function(k){kmeans(df, k, nstart=50,iter.max = 15 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
#print(fit.km)
d_clust <- Mclust(as.matrix(scaled_data), G=1:15,
modelNames = mclust.options("emModelNames"))
d_clust$BIC
plot(d_clust)
library(NbClust)
library(flexclust)
library(cluster)
library(mclust)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
set.seed(123)
k.max <- 15
wss <- sapply(1:k.max,
function(k){kmeans(df, k, nstart=50,iter.max = 15 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
#print(fit.km)
d_clust <- Mclust(as.matrix(df), G=1:15,
modelNames = mclust.options("emModelNames"))
d_clust$BIC
plot(d_clust)
library(NbClust)
library(flexclust)
library(cluster)
library(mclust)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
set.seed(123)
k.max <- 15
wss <- sapply(1:k.max,
function(k){kmeans(df, k, nstart=50,iter.max = 15 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
#print(fit.km)
k.max <- 15
sil <- rep(0, k.max)
# Compute the average silhouette width for
# k = 2 to k = 15
for(i in 2:k.max){
km.res <- kmeans(df, centers = i, nstart = 25)
ss <- silhouette(km.res$cluster, dist(data))
sil[i] <- mean(ss[, 3])
}
# Plot the  average silhouette width
plot(1:k.max, sil, type = "b", pch = 19,
frame = FALSE, xlab = "Number of clusters k")
library(NbClust)
library(flexclust)
library(cluster)
library(mclust)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
set.seed(123)
k.max <- 15
wss <- sapply(1:k.max,
function(k){kmeans(df, k, nstart=50,iter.max = 15 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
#print(fit.km)
k.max <- 15
sil <- rep(0, k.max)
# Compute the average silhouette width for
# k = 2 to k = 15
for(i in 2:k.max){
km.res <- kmeans(df, centers = i, nstart = 25)
ss <- silhouette(km.res$cluster, dist(data))
sil[i] <- mean(ss[, 3])
}
# Plot the  average silhouette width
plot(1:k.max, sil, type = "b", pch = 19,
frame = FALSE, xlab = "Number of clusters k")
abline(v = which.max(sil), lty = 2)
library(NbClust)
library(flexclust)
library(cluster)
library(mclust)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
set.seed(1234)
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
clusplot(df, fit.km$cluster, main='2D representation of the Cluster solution',
color=TRUE, shade=TRUE,
labels=2, lines=0)
#print(fit.km)
library(NbClust)
library(flexclust)
library(cluster)
library(mclust)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
set.seed(1234)
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
clusplot(df, fit.km$cluster, main='2D representation of the Cluster solution',
color=TRUE, shade=TRUE,
labels=2, lines=0)
#print(fit.km)
library(NbClust)
library(flexclust)
library(cluster)
library(mclust)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
set.seed(1234)
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
clusplot(df, fit.km$cluster, main='2D representation of the Cluster solution',
color=TRUE, shade=TRUE,
labels=2, lines=0)
#print(fit.km)
ct.km
library(NbClust)
library(flexclust)
library(cluster)
library(mclust)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
set.seed(1234)
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
clusplot(df, fit.km$cluster, main='2D representation of the Cluster solution',
color=TRUE, shade=TRUE,
labels=2, lines=0)
#print(fit.km)
ct.km <- table( data$ethproportions , fit.km$cluster)
randIndex(ct.km)
ct.km
write.csv(result, file="cluster results in table.csv")
library(NbClust)
library(flexclust)
library(cluster)
library(mclust)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
set.seed(1234)
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
#print(fit.km)
ct.km <- table( data$ethproportions , fit.km$cluster)
randIndex(ct.km)
ct.km
write.csv(result, file="clusters multiple.csv")
library(NbClust)
library(flexclust)
library(cluster)
library(mclust)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
set.seed(1234)
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
#print(fit.km)
ct.km <- table( data$ethproportions , fit.km$cluster)
randIndex(ct.km)
ct.km
boxplot(outputData$crossethnic ~ fit.km$cluster,
xlab='Cluster', ylab='Cross Ethnicity',
main='Cross Ethnicity by Cluster')
library(NbClust)
library(flexclust)
library(cluster)
library(mclust)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
set.seed(1234)
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
#print(fit.km)
ct.km <- table( data$ethproportions , fit.km$cluster)
randIndex(ct.km)
ct.km
print(fit.km)
library(NbClust)
library(flexclust)
library(cluster)
data <- read.csv("resultcomplete.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
print(head(df))
set.seed(1234)
nc <- NbClust(df, min.nc=2, max.nc=15, method="kmeans")
table(nc$Best.n[1,])
barplot(table(nc$Best.n[1,]),
xlab="Numer of Clusters", ylab="Number of Criteria",
main="Number of Clusters Chosen by 26 Criteria")
wssplot(df)
set.seed(1234)
fit.km <- kmeans(df, 3, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
ct.km <- table( data$ethproportions , fit.km$cluster)
randIndex(ct.km)
ct.km
clusplot(df, fit.km$cluster, main='2D representation of the Cluster solution',
color=TRUE, shade=TRUE,
labels=2, lines=0)
boxplot(outputData$crossethnic ~ fit.km$cluster,
xlab='Cluster', ylab='Cross Ethnicity',
main='Cross Ethnicity by Cluster')
boxplot(outputData$item0arraytolistmarriedturtles ~ fit.km$cluster,
xlab='Cluster', ylab='Married in Ethnicity 1',
main='Marriages in ethnicity 1 by Cluster')
print(fit.km)
library(NbClust)
library(flexclust)
library(cluster)
data <- read.csv("resultmultipleR")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
set.seed(1234)
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
print(fit.km)
library(NbClust)
library(flexclust)
library(cluster)
library(mclust)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
set.seed(1234)
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
print(fit.km)
library(NbClust)
library(flexclust)
library(cluster)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
set.seed(1234)
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
ct.km <- table( data$ethproportions , fit.km$cluster)
randIndex(ct.km)
ct.km
print(fit.km)
library(NbClust)
library(flexclust)
library(cluster)
data <- read.csv("resultmultipleR.csv")
#Extracting all the outputs
myvars <- c("item0arraytolistnumturtles","item1arraytolistnumturtles", "item2arraytolistnumturtles", "item3arraytolistnumturtles", "item0arraytolistmarriedturtles", "item1arraytolistmarriedturtles", "item2arraytolistmarriedturtles",
"item3arraytolistmarriedturtles", "item0arraytolistoutpercent","item1arraytolistoutpercent", "item2arraytolistoutpercent", "item3arraytolistoutpercent", "crossethnic")
outputData <- data[myvars]
df <- scale(outputData)
set.seed(1234)
fit.km <- kmeans(df, 4, nstart=25)
fit.km$siz
fit.km$centers
result <- aggregate(outputData, by=list(cluster=fit.km$cluster), mean)
print(result)
ct.km <- table( data$loveradar , fit.km$cluster)
randIndex(ct.km)
ct.km
setwd("~/Desktop/Drug Model Analysis/Cluster Analysis")
library(NbClust)
library(flexclust)
library(cluster)
data <- read.csv("drug.csv")
#Extracting all the outputs
myvars <- c("mean [tax_paid] of consumers","mean [tax_collected] of consumers", "mean [asked_someone_to_broker] of consumers", "mean [brokered_for_someone] of consumers", "mean [brokered_for_new_user] of consumers", "mean [pinched] of consumers", "mean [selling_price] of dealers",
"count dealers", "count consumers")
outputData <- data[myvars]
df <- scale(outputData)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
print(head(df))
set.seed(1234)
nc <- NbClust(df, min.nc=2, max.nc=15, method="kmeans")
table(nc$Best.n[1,])
barplot(table(nc$Best.n[1,]),
xlab="Numer of Clusters", ylab="Number of Criteria",
main="Number of Clusters Chosen by 26 Criteria")
wssplot(df)
library(NbClust)
library(flexclust)
library(cluster)
data <- read.csv("drug_clean.csv")
#Extracting all the outputs
myvars <- c("mean [tax_paid] of consumers","mean [tax_collected] of consumers", "mean [asked_someone_to_broker] of consumers", "mean [brokered_for_someone] of consumers", "mean [brokered_for_new_user] of consumers", "mean [pinched] of consumers", "mean [selling_price] of dealers",
"count dealers", "count consumers")
outputData <- data[myvars]
df <- scale(outputData)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
print(head(df))
set.seed(1234)
nc <- NbClust(df, min.nc=2, max.nc=15, method="kmeans")
table(nc$Best.n[1,])
barplot(table(nc$Best.n[1,]),
xlab="Numer of Clusters", ylab="Number of Criteria",
main="Number of Clusters Chosen by 26 Criteria")
wssplot(df)
df
data <- read.csv("drug_clean.csv")
#Extracting all the outputs
myvars <- c("mean [tax_paid] of consumers","mean [tax_collected] of consumers", "mean [asked_someone_to_broker] of consumers", "mean [brokered_for_someone] of consumers", "mean [brokered_for_new_user] of consumers", "mean [pinched] of consumers", "mean [selling_price] of dealers",
"count dealers", "count consumers")
outputData <- data[myvars]
df <- scale(outputData)
data <- read.csv("drug_clean.csv")
myvars <- c("mean [tax_paid] of consumers","mean [tax_collected] of consumers", "mean [asked_someone_to_broker] of consumers", "mean [brokered_for_someone] of consumers", "mean [brokered_for_new_user] of consumers", "mean [pinched] of consumers", "mean [selling_price] of dealers",
"count dealers", "count consumers")
myvars
outputData <- data[myvars]
myvars <- c("mean [tax_paid] of consumers","mean [tax_collected] of consumers", "mean [asked_someone_to_broker] of consumers", "mean [brokered_for_someone] of consumers", "mean [brokered_for_new_user] of consumers", "mean [pinched] of consumers", "mean [selling_price] of dealers")
outputData <- data[myvars]
data
data.summart()
data.summary()
summary(data)
library(NbClust)
library(flexclust)
library(cluster)
data <- read.csv("drug_outputs.csv")
#Extracting all the outputs
df <- scale(data)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
print(head(df))
set.seed(1234)
nc <- NbClust(df, min.nc=2, max.nc=15, method="kmeans")
